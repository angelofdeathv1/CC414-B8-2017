CREATE OR REPLACE PROCEDURE IBARRA2.MUSICIANS_PRO_ADD (
    a_Name   IN MUDB.MUSICIANS.MUSICIAN_NAME%TYPE,
    a_Date   IN MUDB.MUSICIANS.DATE_BIRTH%TYPE,
    a_Died   IN MUDB.MUSICIANS.DATE_DIED%TYPE,
    a_Orig   IN MUDB.MUSICIANS.ORIGIN_CITY_ID%TYPE,
    a_Resi   IN MUDB.MUSICIANS.RESIDENCE_CITY_ID%TYPE,
    a_Resp  OUT INTEGER)
IS
BEGIN
    INSERT INTO MUDB.MUSICIANS ("MUSICIAN_ID",
                                   "MUSICIAN_NAME",
                                   "DATE_BIRTH",
                                   "DATE_DIED",
                                   "ORIGIN_CITY_ID",
                                   "RESIDENCE_CITY_ID")
         VALUES (MUDB.MUSICIANS_SEQ.NEXTVAL,
                 a_Name,
                 a_Date,
                 a_Died,
                 a_Orig,
                 a_Resi);
        a_Resp := (MUDB.MUSICIANS_SEQ.CURRVAL);
    COMMIT;
END MUSICIANS_PRO_ADD;
/

CREATE OR REPLACE PROCEDURE IBARRA2.BANDS_PRO_MIN(
IDBAND OUT INTEGER
)
IS
BEGIN
    SELECT BAND_ID INTO IDBAND FROM(
    SELECT BAND_ID 
        FROM MUDB.BANDS_MUSICIANS
    GROUP BY BAND_ID
    ORDER BY COUNT (BAND_MUSICIAN_ID) ASC)
    WHERE ROWNUM = 1;
END BANDS_PRO_MIN;
/

CREATE OR REPLACE PROCEDURE IBARRA2.BANDS_MUSICIANS_PRO_ADD (
    a_Band   IN MUDB.BANDS_MUSICIANS.BAND_ID%TYPE,
    a_Inte   IN MUDB.BANDS_MUSICIANS.MUSICIAN_ID%TYPE,
    a_Bmid OUT INTEGER)
IS
BEGIN
    INSERT INTO MUDB.BANDS_MUSICIANS ("BAND_MUSICIAN_ID",
                                   "BAND_ID",
                                   "MUSICIAN_ID")
         VALUES (MUDB.BAND_MUSICIAN_SEQ.NEXTVAL,
                 a_Band,
                 a_Inte);
     a_Bmid := MUDB.BAND_MUSICIAN_SEQ.CURRVAL;
    COMMIT;
END BANDS_MUSICIANS_PRO_ADD;
/

CREATE OR REPLACE PROCEDURE IBARRA2.BANDS_PRO_GNR(IDBAND IN INTEGER, IDGENR OUT INTEGER)
IS
BEGIN
SELECT MUSIC_GENRE_ID INTO IDGENR
        FROM MUDB.BANDS
        WHERE BAND_ID=IDBAND;
END BANDS_PRO_GNR;
/
CREATE OR REPLACE PROCEDURE IBARRA2.BANDS_MUSICIANS_INS_PRO_ADD(
    a_Bmid  IN MUDB.BANDS_MUSICIANS_INSTRUMENTS.BAND_MUSICIAN_ID%TYPE,
    a_Inst  IN MUDB.BANDS_MUSICIANS_INSTRUMENTS.INSTRUMENT_ID%TYPE,
    a_Musi  IN MUDB.BANDS_MUSICIANS_INSTRUMENTS.MUSIC_GENRE_ID%TYPE)
IS
BEGIN
    INSERT INTO MUDB.BANDS_MUSICIANS_INSTRUMENTS ("BAND_MUSICIAN_ID",
                                   "INSTRUMENT_ID",
                                   "MUSIC_GENRE_ID")
         VALUES (a_Bmid,
                 a_Inst,
                 a_Musi);
    COMMIT;
END BANDS_MUSICIANS_INS_PRO_ADD;
/
CREATE OR REPLACE PROCEDURE IBARRA2.RESPONSE_01_CUR(IDBAND IN INTEGER)
AS
        CURSOR NAMES_A IS
        SELECT MUSICIAN_NAME
        FROM MUDB.MUSICIANS  MUS
        INNER JOIN (SELECT MUSICIAN_ID
                     FROM MUDB.BANDS_MUSICIANS
                    WHERE IDBAND = BAND_ID) BAN
           ON BAN.MUSICIAN_ID = MUS.MUSICIAN_ID;
        NAMES_B NAMES_A%ROWTYPE;
        TYPE NAMES_T IS TABLE OF NAMES_B%TYPE;
        L_NAMES NAMES_T;
        
        BEGIN
            OPEN NAMES_A;
            FETCH NAMES_A BULK COLLECT INTO L_NAMES;
            CLOSE NAMES_A;
            
            FOR indx IN 1..L_NAMES.COUNT LOOP
                DBMS_OUTPUT.PUT_LINE(L_NAMES(indx).MUSICIAN_NAME);
                END LOOP;
    END RESPONSE_01_CUR;
/