CREATE OR REPLACE PROCEDURE IBARRA2.RESPONSE_03_CUR(
IDBAND IN INTEGER,
IDGENR IN INTEGER
)
AS
IDINS INTEGER;
BMUS INTEGER;
NOMBRE VARCHAR(30);
        CURSOR BANDS_A IS
            SELECT *
              FROM (  SELECT MUSICIAN_ID
                        FROM (  SELECT COUNT (INSTRUMENT_NAME) AS CONTEO, AUXX.MUSICIAN_ID
                                  FROM (SELECT INSTRUMENT_NAME, MUSICIAN_ID
                                          FROM (SELECT *
                                                  FROM BANDS_MUSICIANS_INSTRUMENTS
                                                       BMI
                                                       INNER JOIN INSTRUMENTS INS
                                                           ON BMI.INSTRUMENT_ID =
                                                                  INS.INSTRUMENT_ID) AUX
                                               INNER JOIN BANDS_MUSICIANS BMU
                                                   ON AUX.BAND_MUSICIAN_ID =
                                                          BMU.BAND_MUSICIAN_ID) AUXX
                                       INNER JOIN MUSICIANS MUS
                                           ON AUXX.MUSICIAN_ID = MUS.MUSICIAN_ID
                              GROUP BY AUXX.MUSICIAN_ID)
                       WHERE CONTEO >= 2
                    ORDER BY CONTEO ASC)
             WHERE ROWNUM <= 6;
        BANDS_B BANDS_A%ROWTYPE;
        TYPE BANDS_T IS TABLE OF BANDS_B%TYPE;
        L_BANDS BANDS_T;
        
        BEGIN
            OPEN BANDS_A;
            FETCH BANDS_A BULK COLLECT INTO L_BANDS;
            CLOSE BANDS_A;
            
            FOR INDX IN 1..L_BANDS.COUNT 
                LOOP
                    INSTRUMENTS_PRO_GET(IDINS, L_BANDS(INDX).MUSICIAN_ID);
                    BANDS_MUSICIANS_PRO_ADD(IDBAND, L_BANDS(INDX).MUSICIAN_ID, BMUS);
                    BANDS_MUSICIANS_INS_PRO_ADD(IDBAND, IDINS, IDGENR);
                    RESPONSE_03_CUR_AUX(L_BANDS(INDX).MUSICIAN_ID);
                    MUSICIANS_PRO_NAME(L_BANDS(INDX).MUSICIAN_ID, NOMBRE);
                    DBMS_OUTPUT.PUT_LINE(L_BANDS(INDX).MUSICIAN_ID ||'  '|| NOMBRE);
    
                END LOOP;
    END RESPONSE_03_CUR;
    /
    
	CREATE OR REPLACE PROCEDURE IBARRA2.RESPONSE_03_CUR_AUX
(
IDMUS IN INTEGER
)
AS
CURSOR INSTRU_A IS
        SELECT INSTRUMENT_NAME FROM MUDB.INSTRUMENTS INS
        INNER JOIN MUDB.BANDS_MUSICIANS_INSTRUMENTS BMI
        ON INS.INSTRUMENT_ID = BMI.INSTRUMENT_ID
        WHERE BMI.BAND_MUSICIAN_ID = IDMUS;
        INSTRU_B INSTRU_A%ROWTYPE;
        TYPE INSTRU_T IS TABLE OF INSTRU_B%TYPE;
        L_INSTRU INSTRU_T;
        
        BEGIN
        OPEN INSTRU_A;
        FETCH INSTRU_A BULK COLLECT INTO L_INSTRU;
        CLOSE INSTRU_A;
        
        FOR INDX IN 1..L_INSTRU.COUNT
        LOOP
             DBMS_OUTPUT.PUT_LINE(L_INSTRU(INDX).INSTRUMENT_NAME);
        END LOOP;
        
        END RESPONSE_03_CUR_AUX;
	/
	
	CREATE OR REPLACE PROCEDURE IBARRA2.MUSICIANS_PRO_NAME
(
IDMUS IN INTEGER,
NOM OUT VARCHAR
)
IS
BEGIN
    SELECT MUSICIAN_NAME INTO NOM
    FROM MUDB.MUSICIANS MUS
    INNER JOIN MUDB.BANDS_MUSICIANS BMU
    ON MUS.MUSICIAN_ID = BMU.MUSICIAN_ID
    WHERE BMU.MUSICIAN_ID = IDMUS
    ;
    END MUSICIANS_PRO_NAME;
	
	/
	CREATE OR REPLACE PROCEDURE IBARRA2.BANDS_PRO_ADD(
a_Name  IN  MUDB.BANDS.BAND_NAME%TYPE,
a_Gnre  IN  MUDB.BANDS.MUSIC_GENRE_ID%TYPE,
a_Home  IN  MUDB.BANDS.BAND_HOME_ID%TYPE,
a_Cont  IN  MUDB.BANDS.CONTACT_MUSICIAN_ID%TYPE,
a_Temp OUT INTEGER
)

IS
BEGIN
    INSERT INTO MUDB.BANDS("BAND_ID","BAND_NAME","MUSIC_GENRE_ID","BAND_HOME_ID","BAND_CREATION_DATE","CONTACT_MUSICIAN_ID")
    VALUES(MUDB.BANDS_SEQ.NEXTVAL,a_Name,a_Gnre,a_Home,CURRENT_DATE,a_Cont);
    a_Temp := MUDB.BANDS_SEQ.CURRVAL;
END BANDS_PRO_ADD;

/

CREATE OR REPLACE PROCEDURE IBARRA2.INSTRUMENTS_PRO_GET
(IDINS OUT INTEGER, IDMUS IN INTEGER)
IS
BEGIN
    SELECT * INTO IDINS FROM(
    SELECT INSTRUMENT_ID FROM MUDB.BANDS BAN
    INNER JOIN MUDB.BANDS_MUSICIANS BMU
    ON BAN.BAND_ID = BMU.BAND_ID
    INNER JOIN MUDB.BANDS_MUSICIANS_INSTRUMENTS BMI
    ON BMU.BAND_MUSICIAN_ID = BMI.BAND_MUSICIAN_ID
    WHERE MUSICIAN_ID = IDMUS
    ORDER BY BAND_CREATION_DATE ASC)
    WHERE ROWNUM =1;
END INSTRUMENTS_PRO_GET;

/

CREATE OR REPLACE PROCEDURE IBARRA2.MUSICIANS_PRO_GETINS
(IDMUS IN INTEGER, NOMBRE OUT VARCHAR)
IS
BEGIN
    SELECT INSTRUMENT_NAME INTO NOMBRE FROM MUDB.INSTRUMENTS INS
    INNER JOIN MUDB.BANDS_MUSICIANS_INSTRUMENTS BMI
    ON INS.INSTRUMENT_ID = BMI.INSTRUMENT_ID
    WHERE BMI.BAND_MUSICIAN_ID = IDMUS;
END MUSICIANS_PRO_GETINS;

/

CREATE OR REPLACE PROCEDURE IBARRA2.MUSICIANS_PRO_GET(IDBAN IN INTEGER)
IS
NOMBRE VARCHAR(100);
INSTRU VARCHAR(100);
IDMUS INTEGER;
BEGIN
    SELECT MUSICIAN_NAME, BAND_MUSICIAN_ID INTO NOMBRE, IDMUS FROM MUDB.BANDS_MUSICIANS BMU
    INNER JOIN MUDB.MUSICIANS MUS ON BMU.MUSICIAN_ID = MUS.MUSICIAN_ID
    WHERE BAND_ID = IDBAN;
    MUSICIANS_PRO_GETINS(IDMUS, INSTRU);
    DBMS_OUTPUT.PUT_LINE(NOMBRE);
    DBMS_OUTPUT.PUT_LINE(INSTRU);

END MUSICIANS_PRO_GET;
/